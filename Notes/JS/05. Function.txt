JAVASCRIPT FUNCTIONS
-these are pieces of code that perform actions,
we've used these before: prompt() and alert()... we can use pre-created functions or we can make them ourselves!
-notice that both functions have (brackets), what does this mean? This means to call a function.
    alert("this is an 'argument'")

>>>>To create own function:
        - Function declaration
            function name() {}
                ex.
                    function sayHello() {
                        console.log("Hello");
                    }
        - Function expression aka Anonomyous Function
        known as an anonymous function because the function itself does not have a name, rather the function has a variable assigned to it.
            var a = function(){
                console.log("Bye");
            }

    so why do we need an argument?
    instead of writing 
        function sing() {
        console.log("do re mi");
    }
        function sing2() {
        console.log("fa so la");
    }
    you can write:
        function sing(song) {
            console.log(song)
        }
        sing("do re mi");
        sing("fa so la");
        sing("ti do");
    you save so many lines of code by writing one function and we don't have to repeat ourselves and the arguments make the function so much more extensible. 
        
the way functions work:
                    return
INPUT ---> FUNCTIONS-------> OUTPUT
in order to recieve an output, you must put a return command.

RETURN

    ex. function multiply(a, b) {
        a*b;
        } 
        multiply(5, 10); ---------------THIS will not work must use:

        function multiply (a, b) {
            return a * b;
        }
        multiply(5, 10);
    ***return is the final function, when it sees 'return' it will stip the function. SO you can't do something like this:
        function multiply (a,b) {
            a*b;
        }
        function multiply(5, 10){
            return a;
            return b;
            return a*b;
        }
    ***this will just return: 5 [the a value] since it is the first return
    ***but you can use an if statement to use more than one return!
        function multiply (a,b) {
            if (a > 10 || b > 10) {
                return "that's too hard";
            } else {
                return a*b;
            }}

You can start nesting functions inside of each other:
    function multiply (a,b) {
        return a*b;
    }

    alert(multiply(4,5)); is the same as:
        var total = multiply(4,5);
        alert(total);
    you are saving lines!

Parameters vs arguments
multiply(a,b) {
    return a*b;
}
multiply (4,5);

argument: in this case are 4 and 5. 
a parameter: in this case are a and b.

